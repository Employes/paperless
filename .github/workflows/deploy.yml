# .github/workflows/deploy.yml

# Workflow name
name: 'Deploy'

# Event for the workflow
on: push

# env:
# GIT_SSH_COMMAND: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no

# List of jobs
jobs:
  # lint:
  #     runs-on: ubuntu-latest
  #     if: |
  #         !contains(github.event.head_commit.message, 'no-release') && !contains(github.event.head_commit.message, 'Lerna publish')
  #     steps:
  #         - uses: actions/checkout@v2

  #         - name: Setup node
  #           uses: actions/setup-node@v2
  #           with:
  #               node-version: 14

  #         - uses: c-hive/gha-yarn-cache@v1

  #         - name: Install dependencies
  #           run: yarn

  # - name: Lint
  #   run: yarn lerna:lint

  build:
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'no-build') &&
      !contains(github.event.head_commit.message, 'Lerna publish')
    steps:
      - name: 'Checkout' # Download code from the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Checkout all branches and tags

      - name: Setup node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          always-auth: true
          node-version: 20.9
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - uses: oleksiyrudenko/gha-git-credentials@v2.1.2
        with:
          name: 'Github Actions'
          email: 'actions@github.com'
          token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Version
        if: |
          github.ref == 'refs/heads/main'
        run: yarn lerna:version:nopush

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn lerna:build:prod

      - name: Push changes
        if: |
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'chore')
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: |
            lerna.json
            CHANGELOG.md
            packages/core/package.json
            packages/core/CHANGELOG.md
            packages/conventions/package.json
            packages/conventions/CHANGELOG.md
            packages/angular/package.json
            packages/angular/CHANGELOG.md
            packages/react/package.json
            packages/react/CHANGELOG.md
            packages/core/dist
            packages/core/loader
            packages/core/hydrate
            packages/conventions/dist
            packages/angular/dist
            packages/react/dist

  release:
    needs: [build]
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' &&
      !contains(github.event.head_commit.message, 'no-release') &&
      !contains(github.event.head_commit.message, 'Lerna publish') &&
      !contains(github.event.head_commit.message , 'docs:') &&
      !contains(github.event.head_commit.message , 'docs(') &&
      !contains(github.event.head_commit.message, 'chore')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          always-auth: true
          node-version: 20.9
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn lerna:publish

  deploy-storybook:
    needs: [build]
    if: |
      github.ref == 'refs/heads/main' &&
      !contains(github.event.head_commit.message, 'no-build') &&
      !contains(github.event.head_commit.message, 'no-release') &&
      !contains(github.event.head_commit.message, 'Lerna publish')
    runs-on: ubuntu-latest
    # Job steps
    steps:
      - uses: actions/checkout@v4 # v4
        with:
          fetch-depth: 0

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Setup node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          always-auth: true
          node-version: 20.9
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Build storybook
        env:
          NODE_OPTIONS: '--openssl-legacy-provider'
        run: yarn storybook:build

      - name: Deploy storybook
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: yarn storybook:deploy
